#ifndef CS_TESTS
#define CS_TESTS

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_baseline_count_sketch_error_on_arrival(int N, int width, int height, int seed, const char* data);
void test_baseline_count_sketch_speed(int N, int width, int height, int seed, const char* data);

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_baseline_count_sketch_five_rows_error_on_arrival(int N, int width, int height, int seed, const char* data);
void test_baseline_count_sketch_five_rows_speed(int N, int width, int height, int seed, const char* data);

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_fg_salsa_count_sketch_error_on_arrival(int tango_bits, int N, int width, int height, int seed, const char* data, int downsamplings_per_merge, bool maximum_merge);

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_fg_salsa_split_counters_sanity_count_sketch(int N, int width, int height, int seed, const char* data, bool maximum_merge);

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_fg_salsa_count_sketch_hh(int salsa_bits, int N, int width, int height, int seed, const char* data, int downsamplings_per_merge, int HH_num, bool maximum_merge);

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_fg_salsa_count_sketch_l2(int salsa_bits, int N, int width, int height, int seed, const char* data, int downsamplings_per_merge, bool maximum_merge);

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_fg_salsa_count_sketch_turnstile(int salsa_bits, int N, int width, int height, int seed, const char* data);

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

void test_fg_salsa_count_sketch_all_except_turnstile(int salsa_bits, int N, int width, int height, int seed, const char* data, int downsamplings_per_merge, int HH_num, bool maximum_merge);

#endif